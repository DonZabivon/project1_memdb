STATEMENT -> CREATE_STATEMENT | INSERT_STATEMENT | SELECT_STATEMENT | UPDATE_STATEMENT | DELETE_STATEMENT | INDEX_STATEMENT

CREATE_STATEMENT -> create table ID ( COLUMNS_DEF_LIST )
COLUMNS_DEF_LIST -> COLUMN_DEF COLUMNS_DEF_LIST_TAIL
COLUMNS_DEF_LIST_TAIL -> , COLUMNS_DEF_LIST | #
COLUMN_DEF -> COLUMN_ATTR ID : TYPE DEF_VALUE
COLUMN_ATTR -> { ATTR_LIST } | #
ATTR_LIST -> ATTR ATTR_LIST_TAIL
ATTR_LIST_TAIL -> , ATTR_LIST | #
ATTR -> unique | autoincrement | key
DEF_VALUE -> = VALUE | #
VALUE -> INT_LIT | BOOL_LIT | STR_LIT | BYTES_LIT
BOOL_LIT -> true | false
TYPE -> int32 | bool | STR_TYPE | BYTES_TYPE
STR_TYPE -> string [ INT_LIT ]
BYTES_TYPE -> bytes [ INT_LIT ]

INSERT_STATEMENT -> insert ( VALUE_LIST ) to ID
VALUE_LIST -> VALUE_LIST1 | VALUE_LIST2
VALUE_LIST1 -> VALUE_DEF1 VALUE_LIST_TAIL1
VALUE_LIST_TAIL1 -> , VALUE_LIST1 | #
VALUE_DEF1 -> VALUE | #
VALUE_LIST2 -> VALUE_DEF2 VALUE_LIST_TAIL2
VALUE_LIST_TAIL2 -> , VALUE_LIST2 | #
VALUE_DEF2 -> ID = VALUE

SELECT_STATEMENT -> select COLUMNS_LIST from TABLE where CONDITION
TABLE -> ID TABLE_TAIL
TABLE_TAIL -> join ID | #
COLUMNS_LIST -> COLUMN COLUMNS_LIST_TAIL
COLUMNS_LIST_TAIL -> , COLUMNS_LIST | #
COLUMN -> ID COLUMN_TAIL
COLUMN_TAIL -> . ID | #
CONDITION -> TODO!!!

UPDATE_STATEMENT -> update TABLE set ASSIGN_LIST where CONDITION
ASSIGN_LIST -> ASSIGN ASSIGN_LIST_TAIL
ASSIGN_LIST_TAIL -> , ASSIGN_LIST | #
ASSIGN -> COLUMN = ASSIGN_EXPR
ASSIGN_EXPR -> TODO!!!

DELETE_STATEMENT -> delete ID where CONDITION

INDEX_STATEMENT -> create INDEX_TYPE index on ID by COLUMNS_LIST2
COLUMNS_LIST2 -> ID COLUMNS_LIST_TAIL2
COLUMNS_LIST_TAIL2 -> , COLUMNS_LIST2 | #

CONDITION -> EXPR
EXPR -> ( EXPR )
EXPR -> VALUE | ID | LENGTH
EXPR -> UN_EXPR | BIN_EXPR
UN_EXPR -> UN_OP EXPR
BIN_EXPR -> EXPR BIN_OP EXPR
UN_OP -> MINUS | NOT
BIN_OP -> ARITH | LOGIC | COMP
ARITH -> PLUS | MINUS | MULT | DIV | MOD
LOGIC -> AND | OR | XOR
COMP -> EQ | NE | LT | GT | LE | GE
LENGTH -> PIPE ID PIPE


